# Platform and shell agnostic profile configuration
#
# ------------------------------------------------------------------
#
#   Setup
#
#-------------------------------------------------------------------
export FUNCPATH=${HOME}/.functions
. $FUNCPATH/default #2>/dev/null

[ $(detect_shell) = bash ] && shopt -s expand_aliases
. ~/.config/profile/aliases

__hostname=$(hostname) # we will override this in some configs to disambiguate

# ------------------------------------------------------------------
#
#   Generic PATH settings
#
# ------------------------------------------------------------------
add_to_path ${HOME}/.bin                        # my bin
add_to_path ${HOME}/.local/bin                  # bin (inc. overrides)
add_to_path ${HOME}/.scripts                    # scripts
add_to_path ${HOME}/.scripts/git                # git-related scripts
add_to_path ${HOME}/.private/scripts            # sensitive scripts
add_to_path ${HOME}/.scripts/3rd-party          # 3rd party scripts

# Source platform-specific profile config
. ${HOME}/.config/profile/$(detect_platform).sh
. ${HOME}/.config/profile/$(detect_platform).$(detect_shell)

# Source host-specific profile config if it exists
if [ -f ${HOME}/.config/profile/host/$__hostname.$(detect_shell) ]; then
    . ${HOME}/.config/profile/host/$__hostname.$(detect_shell)
fi
unset __hostname

# Source common (and shell-specific) config
for f in ${HOME}/.config/profile/common.d/*.sh; do
    . $f
done
for f in ${HOME}/.config/profile/common.d/*.$(detect_shell); do
    . $f
done

# -----------------------------------------------------------------
# 
#  Editors
#
# -----------------------------------------------------------------
# disabled for neovim ground-up configuration
#export VIMINIT='let $MYVIMRC = "'${XDF_CONFIG_HOME:-~/.config}'/vim/vimrc" | source $MYVIMRC'

# -----------------------------------------------------------------
#
#  Frameworks
#
# -----------------------------------------------------------------
# Python / conda / mamba
export JUPYTER_CONFIG_DIR=${XDG_CONFIG_HOME:-$HOME/.config}/jupyter
export CONDAWRAPPER_PROJECTS=~/repos
export CONDARC=${XDG_CONFIG_HOME:-$HOME/.config}/conda/condarc

# R, LaTeX see old .profile

# Terraform, serverless, AWS
# NOTE the docs say it should be of the form *.tfrc (rather than terraform.rc)
export TF_CLI_CONFIG_FILE=${XDG_CONFIG_HOME:-$HOME/.config}/terraform/config.tfrc

# .NET
add_to_path ${HOME}/.dotnet/tools after
